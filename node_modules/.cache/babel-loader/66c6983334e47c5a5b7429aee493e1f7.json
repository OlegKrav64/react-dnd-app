{"ast":null,"code":"var _jsxFileName = \"/home/supremio/Desktop/react-dnd-app/src/components/Item/Item.js\",\n    _s = $RefreshSig$();\n\nimport styles from './Item.module.scss';\nimport { useDrag } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Item = () => {\n  _s();\n\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      name: 'Any custom name',\n      type: 'Irrelevant, for now'\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0.4 : 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    className: \"movable-item\",\n    style: {\n      opacity\n    },\n    children: \"We will move this item\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Item, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/home/supremio/Desktop/react-dnd-app/src/components/Item/Item.js"],"names":["styles","useDrag","Item","isDragging","drag","item","name","type","collect","monitor","opacity"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBH,OAAO,CAAC;AACnCI,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,IAAI,EAAE;AAAjC,KAD6B;AAEnCC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBN,MAAAA,UAAU,EAAEM,OAAO,CAACN,UAAR;AADO,KAAd;AAF0B,GAAD,CAAtC;AAOA,QAAMO,OAAO,GAAGP,UAAU,GAAG,GAAH,GAAS,CAAnC;AAEA,sBACI;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,cAA1B;AAAyC,IAAA,KAAK,EAAE;AAAGM,MAAAA;AAAH,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfM;;GAAMR,I;UACsBD,O;;;KADtBC,I","sourcesContent":["import styles from './Item.module.scss'\nimport { useDrag } from 'react-dnd'\n\nexport const Item = () => {\n    const [{ isDragging }, drag] = useDrag({\n        item: { name: 'Any custom name', type: 'Irrelevant, for now' },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    const opacity = isDragging ? 0.4 : 1;\n\n    return (\n        <div ref={drag} className='movable-item' style={{  opacity }}>\n            We will move this item\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}