{"ast":null,"code":"import _objectSpread from\"/home/supremio/Desktop/react-dnd-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/supremio/Desktop/react-dnd-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import styles from'./Column.module.scss';import{useDrop}from'react-dnd';import{ColumnHeader}from'./ColumnHeader/ColumnHeader';import{Button}from'../Button/Button';import plusImg from\"../../assets/img/plus.svg\";import{useDispatch,useSelector}from'react-redux';import{setModalListVisibility}from'../../redux/actions/modalListActionCreator';import{getItemsByType}from'../../redux/selectors/categoriesSelector';import{Item}from'../Item/Item';import{addItem,removeItem}from'../../redux/actions/categoriesActionCreator';import{jsx as _jsx}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Column=function Column(_ref){var title=_ref.title,type=_ref.type;var _useDrop=useDrop({accept:'item',drop:function drop(data){return changeItemCategory(data);},collect:function collect(monitor){return{isOver:monitor.isOver(),canDrop:monitor.canDrop()};}}),_useDrop2=_slicedToArray(_useDrop,2),_useDrop2$=_useDrop2[0],canDrop=_useDrop2$.canDrop,isOver=_useDrop2$.isOver,drop=_useDrop2[1];var dispatch=useDispatch();var items=useSelector(function(state){return getItemsByType(state,type);});var changeModalVisibility=function changeModalVisibility(){dispatch(setModalListVisibility(true,type));};var changeItemCategory=function changeItemCategory(data){dispatch(removeItem(data.obj.timestamp,data.category));dispatch(addItem(data.obj,type));};var isActive=canDrop&&isOver;var backgroundColor='#fff';if(isActive){backgroundColor='rgba(157, 209, 237, 0.1)';}else if(canDrop){backgroundColor='rgba(164, 237, 157, 0.1)';}return/*#__PURE__*/_jsxs(\"div\",{className:styles.column,style:{backgroundColor:backgroundColor},children:[/*#__PURE__*/_jsx(ColumnHeader,{title:title}),/*#__PURE__*/_jsx(\"div\",{className:styles.list,ref:drop,children:items.map(function(item){return/*#__PURE__*/_createElement(Item,_objectSpread(_objectSpread({},item),{},{key:\"\".concat(item.id,\"__\").concat(item.timestamp),type:type,dispatch:dispatch}));})}),/*#__PURE__*/_jsx(\"div\",{className:styles.btn,children:/*#__PURE__*/_jsx(Button,{imgUrl:plusImg,text:\"Add alternative\",clickHandler:changeModalVisibility})})]});};","map":{"version":3,"sources":["/home/supremio/Desktop/react-dnd-app/src/components/Column/Column.js"],"names":["styles","useDrop","ColumnHeader","Button","useDispatch","useSelector","setModalListVisibility","getItemsByType","Item","addItem","removeItem","Column","title","type","accept","drop","data","changeItemCategory","collect","monitor","isOver","canDrop","dispatch","items","state","changeModalVisibility","obj","timestamp","category","isActive","backgroundColor","column","list","map","item","id","btn","plusImg"],"mappings":"qTAAA,MAAOA,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,YAAT,KAA6B,6BAA7B,CACA,OAASC,MAAT,KAAuB,kBAAvB,C,+CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,sBAAT,KAAuC,4CAAvC,CACA,OAASC,cAAT,KAA+B,0CAA/B,CACA,OAASC,IAAT,KAAqB,cAArB,CACA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,6CAApC,C,2IAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAmB,IAAjBC,CAAAA,KAAiB,MAAjBA,KAAiB,CAAVC,IAAU,MAAVA,IAAU,CACrC,aAAoCZ,OAAO,CAAC,CACxCa,MAAM,CAAE,MADgC,CAExCC,IAAI,CAAE,cAACC,IAAD,QAAUC,CAAAA,kBAAkB,CAACD,IAAD,CAA5B,EAFkC,CAGxCE,OAAO,CAAE,iBAACC,OAAD,QAAc,CACnBC,MAAM,CAAED,OAAO,CAACC,MAAR,EADW,CAEnBC,OAAO,CAAEF,OAAO,CAACE,OAAR,EAFU,CAAd,EAH+B,CAAD,CAA3C,8DAASA,OAAT,YAASA,OAAT,CAAkBD,MAAlB,YAAkBA,MAAlB,CAA4BL,IAA5B,cASA,GAAMO,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CAEA,GAAMmB,CAAAA,KAAK,CAAGlB,WAAW,CAAC,SAAAmB,KAAK,QAAIjB,CAAAA,cAAc,CAACiB,KAAD,CAAQX,IAAR,CAAlB,EAAN,CAAzB,CAEA,GAAMY,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAChCH,QAAQ,CAAChB,sBAAsB,CAAC,IAAD,CAAOO,IAAP,CAAvB,CAAR,CACH,CAFD,CAIA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACD,IAAD,CAAU,CACjCM,QAAQ,CAACZ,UAAU,CAACM,IAAI,CAACU,GAAL,CAASC,SAAV,CAAqBX,IAAI,CAACY,QAA1B,CAAX,CAAR,CACAN,QAAQ,CAACb,OAAO,CAACO,IAAI,CAACU,GAAN,CAAWb,IAAX,CAAR,CAAR,CACH,CAHD,CAKA,GAAMgB,CAAAA,QAAQ,CAAGR,OAAO,EAAID,MAA5B,CACA,GAAIU,CAAAA,eAAe,CAAG,MAAtB,CACA,GAAID,QAAJ,CAAc,CACVC,eAAe,CAAG,0BAAlB,CACH,CAFD,IAGK,IAAIT,OAAJ,CAAa,CACdS,eAAe,CAAG,0BAAlB,CACH,CAED,mBACI,aACI,SAAS,CAAE9B,MAAM,CAAC+B,MADtB,CAEI,KAAK,CAAE,CAACD,eAAe,CAAfA,eAAD,CAFX,wBAII,KAAC,YAAD,EAAc,KAAK,CAAElB,KAArB,EAJJ,cAKI,YACI,SAAS,CAAEZ,MAAM,CAACgC,IADtB,CAEI,GAAG,CAAEjB,IAFT,UAKQQ,KAAK,CAACU,GAAN,CAAU,SAAAC,IAAI,qBAAI,eAAC,IAAD,gCACVA,IADU,MAEd,GAAG,WAAKA,IAAI,CAACC,EAAV,cAAiBD,IAAI,CAACP,SAAtB,CAFW,CAGd,IAAI,CAAEd,IAHQ,CAId,QAAQ,CAAES,QAJI,GAAJ,EAAd,CALR,EALJ,cAkBI,YAAK,SAAS,CAAEtB,MAAM,CAACoC,GAAvB,uBACI,KAAC,MAAD,EACI,MAAM,CAAEC,OADZ,CAEI,IAAI,CAAC,iBAFT,CAGI,YAAY,CAAEZ,qBAHlB,EADJ,EAlBJ,GADJ,CA4BH,CA5DM","sourcesContent":["import styles from './Column.module.scss'\nimport { useDrop } from 'react-dnd';\nimport { ColumnHeader } from './ColumnHeader/ColumnHeader';\nimport { Button } from '../Button/Button';\nimport plusImg from '../../assets/img/plus.svg'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalListVisibility } from '../../redux/actions/modalListActionCreator';\nimport { getItemsByType } from '../../redux/selectors/categoriesSelector';\nimport { Item } from '../Item/Item'\nimport { addItem, removeItem } from '../../redux/actions/categoriesActionCreator';\n\nexport const Column = ({title, type}) => {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: 'item',\n        drop: (data) => changeItemCategory(data),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const dispatch = useDispatch()\n\n    const items = useSelector(state => getItemsByType(state, type))\n\n    const changeModalVisibility = () => {\n        dispatch(setModalListVisibility(true, type))\n    }\n\n    const changeItemCategory = (data) => {\n        dispatch(removeItem(data.obj.timestamp, data.category))\n        dispatch(addItem(data.obj, type))\n    }\n\n    const isActive = canDrop && isOver;\n    let backgroundColor = '#fff';\n    if (isActive) {\n        backgroundColor = 'rgba(157, 209, 237, 0.1)';\n    }\n    else if (canDrop) {\n        backgroundColor = 'rgba(164, 237, 157, 0.1)';\n    }\n\n    return (\n        <div \n            className={styles.column}\n            style={{backgroundColor}}\n        >\n            <ColumnHeader title={title} />\n            <div\n                className={styles.list}\n                ref={drop}\n            >\n                {\n                    items.map(item => <Item \n                        {...item} \n                        key={`${item.id}__${item.timestamp}`} \n                        type={type} \n                        dispatch={dispatch} \n                    />)\n                }\n            </div>\n            <div className={styles.btn}>\n                <Button \n                    imgUrl={plusImg} \n                    text='Add alternative' \n                    clickHandler={changeModalVisibility} \n                />\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}