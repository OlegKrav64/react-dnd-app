{"ast":null,"code":"var _jsxFileName = \"/home/supremio/Desktop/react-dnd-app/src/components/ModalList/ModalList.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './ModalList.module.scss';\nimport { ModalListItem } from './ModalListItem/ModalListItem';\nimport { getItems } from '../../redux/selectors/mealsSelector';\nimport { setModalListVisibility } from '../../redux/actions/modalListActionCreator';\nimport { getModalListActiveCategory } from '../../redux/selectors/modalListSelector';\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport const ModalList = () => {\n  _s();\n\n  const {\n    isLoaded,\n    items\n  } = useSelector(getItems);\n  const activeCategory = useSelector(getModalListActiveCategory);\n  const dispatch = useDispatch();\n  const modalRef = useRef(null);\n\n  const changeModalVisibility = () => {\n    dispatch(setModalListVisibility(false, null));\n  };\n\n  const handleClickOutside = e => {\n    const path = e.path || e.composedPath && e.composedPath();\n\n    if (!path.includes(modalRef.current)) {\n      dispatch(setModalListVisibility(false, null));\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('click', handleClickOutside);\n    return () => {\n      window.removeEventListener('click', handleClickOutside);\n    }; //eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalList,\n      ref: modalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.topSide,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeModalVisibility,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.list,\n        children: isLoaded ? items.map(item => /*#__PURE__*/_createElement(ModalListItem, { ...item,\n          key: item.id,\n          activeCategory: activeCategory,\n          dispatch: dispatch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 43\n          }\n        })) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.loader,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalList, \"W3AesKoAhjY5JchQauN3SiVkI+0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ModalList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalList\");","map":{"version":3,"sources":["/home/supremio/Desktop/react-dnd-app/src/components/ModalList/ModalList.js"],"names":["useDispatch","useSelector","styles","ModalListItem","getItems","setModalListVisibility","getModalListActiveCategory","useEffect","useRef","ModalList","isLoaded","items","activeCategory","dispatch","modalRef","changeModalVisibility","handleClickOutside","e","path","composedPath","includes","current","window","addEventListener","removeEventListener","overlay","modalList","topSide","list","map","item","id","loader"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,QAAT,QAAyB,qCAAzB;AACA,SAASC,sBAAT,QAAuC,4CAAvC;AACA,SAASC,0BAAT,QAA2C,yCAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAoBV,WAAW,CAACG,QAAD,CAArC;AACA,QAAMQ,cAAc,GAAGX,WAAW,CAACK,0BAAD,CAAlC;AAEA,QAAMO,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMO,qBAAqB,GAAG,MAAM;AAChCF,IAAAA,QAAQ,CAACR,sBAAsB,CAAC,KAAD,EAAQ,IAAR,CAAvB,CAAR;AACH,GAFD;;AAIA,QAAMW,kBAAkB,GAAGC,CAAC,IAAI;AAC5B,UAAMC,IAAI,GAAGD,CAAC,CAACC,IAAF,IAAWD,CAAC,CAACE,YAAF,IAAkBF,CAAC,CAACE,YAAF,EAA1C;;AACA,QAAG,CAACD,IAAI,CAACE,QAAL,CAAcN,QAAQ,CAACO,OAAvB,CAAJ,EAAqC;AACjCR,MAAAA,QAAQ,CAACR,sBAAsB,CAAC,KAAD,EAAQ,IAAR,CAAvB,CAAR;AACH;AACJ,GALD;;AAOAE,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCP,kBAAjC;AACA,WAAO,MAAM;AACTM,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCR,kBAApC;AACH,KAFD,CAFY,CAKZ;AACH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACuB,OAAvB;AAAA,2BACI;AACI,MAAA,SAAS,EAAEvB,MAAM,CAACwB,SADtB;AAEI,MAAA,GAAG,EAAEZ,QAFT;AAAA,8BAII;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACyB,OAAvB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,OAAO,EAAEZ,qBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI;AAAI,QAAA,SAAS,EAAEb,MAAM,CAAC0B,IAAtB;AAAA,kBACMlB,QAAQ,GACNC,KAAK,CAACkB,GAAN,CAAUC,IAAI,iBAAI,eAAC,aAAD,OAAmBA,IAAnB;AAAyB,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAnC;AAAuC,UAAA,cAAc,EAAEnB,cAAvD;AAAuE,UAAA,QAAQ,EAAEC,QAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB,CADM,gBAEN;AAAK,UAAA,SAAS,EAAEX,MAAM,CAAC8B,MAAvB;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAlDM;;GAAMvB,S;UACiBR,W,EACHA,W,EAEND,W;;;KAJRS,S","sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport styles from './ModalList.module.scss'\nimport { ModalListItem } from './ModalListItem/ModalListItem'\nimport { getItems } from '../../redux/selectors/mealsSelector'\nimport { setModalListVisibility } from '../../redux/actions/modalListActionCreator'\nimport { getModalListActiveCategory } from '../../redux/selectors/modalListSelector'\nimport { useEffect, useRef } from 'react'\n\nexport const ModalList = () => {\n    const {isLoaded, items} = useSelector(getItems)\n    const activeCategory = useSelector(getModalListActiveCategory)\n    \n    const dispatch = useDispatch()\n\n    const modalRef = useRef(null)\n\n    const changeModalVisibility = () => {\n        dispatch(setModalListVisibility(false, null))\n    }\n\n    const handleClickOutside = e => {\n        const path = e.path || (e.composedPath && e.composedPath())\n        if(!path.includes(modalRef.current)) {\n            dispatch(setModalListVisibility(false, null))\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', handleClickOutside)\n        return () => {\n            window.removeEventListener('click', handleClickOutside)\n        }\n        //eslint-disable-next-line\n    }, [])\n\n    return (\n        <div className={styles.overlay}>\n            <div \n                className={styles.modalList}\n                ref={modalRef}\n            >\n                <div className={styles.topSide}>\n                    <h3>Recipes</h3>\n                    <button\n                        onClick={changeModalVisibility}\n                    >&times;</button>\n                </div>\n                <ul className={styles.list}>\n                    { isLoaded ?\n                        items.map(item => <ModalListItem {...item} key={item.id} activeCategory={activeCategory} dispatch={dispatch} />) :\n                        <div className={styles.loader}>\n                            <h3>Loading...</h3>\n                        </div>\n                    }\n                </ul>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}