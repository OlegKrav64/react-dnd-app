{"ast":null,"code":"var _jsxFileName = \"/home/supremio/Desktop/react-dnd-app/src/components/ModalList/ModalList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport styles from './ModalList.module.scss';\nimport { ModalListItem } from './ModalListItem/ModalListItem';\nimport { getItems } from '../../redux/selectors/mealsSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport const ModalList = () => {\n  _s();\n\n  const {\n    isLoaded,\n    items\n  } = useSelector(getItems);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalList,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.topSide,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.list,\n        children: isLoaded ? items.map(item => /*#__PURE__*/_createElement(ModalListItem, { ...item,\n          key: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 43\n          }\n        })) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.loader,\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalList, \"/61e7w7kp59x1LcBuaZRgRON6Tk=\", false, function () {\n  return [useSelector];\n});\n\n_c = ModalList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalList\");","map":{"version":3,"sources":["/home/supremio/Desktop/react-dnd-app/src/components/ModalList/ModalList.js"],"names":["useSelector","styles","ModalListItem","getItems","ModalList","isLoaded","items","overlay","modalList","topSide","list","map","item","id","loader"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,QAAT,QAAyB,qCAAzB;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAoBN,WAAW,CAACG,QAAD,CAArC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACM,OAAvB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACO,SAAvB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEP,MAAM,CAACQ,OAAvB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAI,QAAA,SAAS,EAAER,MAAM,CAACS,IAAtB;AAAA,kBACML,QAAQ,GACNC,KAAK,CAACK,GAAN,CAAUC,IAAI,iBAAI,eAAC,aAAD,OAAmBA,IAAnB;AAAyB,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB,CADM,gBAEN;AAAI,UAAA,SAAS,EAAEZ,MAAM,CAACa,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnBM;;GAAMV,S;UACiBJ,W;;;KADjBI,S","sourcesContent":["import { useSelector } from 'react-redux'\nimport styles from './ModalList.module.scss'\nimport { ModalListItem } from './ModalListItem/ModalListItem'\nimport { getItems } from '../../redux/selectors/mealsSelector'\n\nexport const ModalList = () => {\n    const {isLoaded, items} = useSelector(getItems)\n\n    return (\n        <div className={styles.overlay}>\n            <div className={styles.modalList}>\n                <div className={styles.topSide}>\n                    <h3>Recipes</h3>\n                    <button>&times;</button>\n                </div>\n                <ul className={styles.list}>\n                    { isLoaded ?\n                        items.map(item => <ModalListItem {...item} key={item.id} />) :\n                        <h3 className={styles.loader}>Loading...</h3>\n                    }\n                </ul>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}